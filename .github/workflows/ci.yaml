name: CI — Build and Push to Harbor (no docker login)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

env:
  # Harbor
  REGISTRY: harbor.snapnbuy.net
  PROJECT: library
  IMAGE_NAME: test-server
  TAG: ${{ github.sha }}

  # Hardcode robot account (DEMO/TEST — không an toàn cho prod)
  HARBOR_USERNAME: "robot$library+ci"
  HARBOR_PASSWORD: "KLmFQhd4OzrXb4ZiRTr9HssekjYcs7kc"

  # Tối ưu build
  DOCKER_BUILDKIT: "1"

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      # (Tuỳ runner) Cài skopeo nếu chưa có
      - name: Install skopeo if missing
        run: |
          if ! command -v skopeo >/dev/null 2>&1; then
            echo "::group::Installing skopeo"
            if [ -f /etc/debian_version ]; then
              sudo apt-get update -y
              sudo apt-get install -y skopeo
            elif [ -f /etc/redhat-release ]; then
              sudo yum install -y skopeo
            else
              echo "Please install skopeo on this runner (unsupported distro auto-install)."
              exit 1
            fi
            echo "::endgroup::"
          fi
          skopeo --version

      # Kiểm tra kết nối Harbor public
      - name: Debug Harbor connectivity
        run: |
          echo "--- DNS ---"
          (dig $REGISTRY || nslookup $REGISTRY) || true
          echo "--- /v2/ challenge ---"
          curl -sS -I https://$REGISTRY/v2/ || true

      # Build image với tag SHA
      - name: Build image
        run: |
          IMAGE="$REGISTRY/$PROJECT/$IMAGE_NAME:$TAG"
          echo "Building $IMAGE"
          docker build -t "$IMAGE" .

      # Tạo authfile tạm cho skopeo (không dùng docker login)
      - name: Create skopeo authfile
        run: |
          AUTH="$(printf '%s:%s' "$HARBOR_USERNAME" "$HARBOR_PASSWORD" | base64 | tr -d '\n')"
          cat > /tmp/auth.json <<EOF
          {
            "auths": {
              "${REGISTRY}": {
                "auth": "${AUTH}"
              }
            }
          }
          EOF
          chmod 600 /tmp/auth.json

      # Push tag SHA bằng skopeo (từ docker-daemon → registry)
      - name: Push image (SHA tag) via skopeo
        run: |
          SRC="docker-daemon:${REGISTRY}/${PROJECT}/${IMAGE_NAME}:${TAG}"
          DEST="docker://${REGISTRY}/${PROJECT}/${IMAGE_NAME}:${TAG}"
          skopeo copy --dest-authfile /tmp/auth.json "$SRC" "$DEST"

      # (Tuỳ chọn) Tag & push latest nếu nhánh main
      - name: Tag & push latest via skopeo
        if: github.ref == 'refs/heads/main'
        run: |
          BASE="${REGISTRY}/${PROJECT}/${IMAGE_NAME}"
          docker tag "$BASE:${TAG}" "$BASE:latest"

          SRC_LATEST="docker-daemon:${BASE}:latest"
          DEST_LATEST="docker://${BASE}:latest"
          skopeo copy --dest-authfile /tmp/auth.json "$SRC_LATEST" "$DEST_LATEST"

      # Verify: inspect manifest trên registry
      - name: Verify pushed image
        run: |
          skopeo inspect --no-tags "docker://${REGISTRY}/${PROJECT}/${IMAGE_NAME}:${TAG}" | jq '.digest'
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            skopeo inspect --no-tags "docker://${REGISTRY}/${PROJECT}/${IMAGE_NAME}:latest" | jq '.digest'
          fi

      # Dọn authfile
      - name: Cleanup authfile
        if: always()
        run: rm -f /tmp/auth.json || true
