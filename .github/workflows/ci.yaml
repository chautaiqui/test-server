name: CI (Self-hosted) — Build & Push to Harbor (CLI)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

env:
  PROJECT: library
  IMAGE_NAME: test-server
  TAG: ${{ github.sha }}
  REGISTRY: harbor.internal:52394   # host:port, dùng 1 biến duy nhất

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      # Debug kết nối & xác thực /v2/
      - name: Debug Harbor reachability
        run: |
          echo "REGISTRY=${{ env.REGISTRY }}"
          getent hosts harbor.internal || true
          echo "== curl /v2/ =="
          curl -sv -H "Host: harbor.internal" http://${{ env.REGISTRY }}/v2/ | head -n 20 || true

      # Xoá mọi đăng nhập cũ dễ gây nhầm host/port
      - name: Cleanup old docker auth
        run: |
          docker logout harbor.internal || true
          docker logout harbor.internal:80 || true
          docker logout ${{ env.REGISTRY }} || true
          rm -f ~/.docker/config.json || true

      # Đăng nhập đúng host:port
      - name: Docker login Harbor (robot)
        run: |
          echo "${{ secrets.HARBOR_PASSWORD }}" | \
            docker login "${{ env.REGISTRY }}" \
            -u "${{ secrets.HARBOR_USERNAME }}" --password-stdin

      # Build bằng Docker CLI
      - name: Build image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"
          echo "Building $IMAGE"
          docker build -t "$IMAGE" .

      # Push bằng Docker CLI (bắt buộc tag gồm host:port)
      - name: Push image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"
          docker push "$IMAGE"

      # (tuỳ chọn) tag latest
      - name: Tag latest
        if: github.ref == 'refs/heads/main'
        run: |
          BASE="${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ env.IMAGE_NAME }}"
          docker tag "$BASE:${{ env.TAG }}" "$BASE:latest"
          docker push "$BASE:latest"
